plugins {
    id "idea"
    id "org.jetbrains.kotlin.kapt" version "1.7.10"
    id "org.jetbrains.kotlin.jvm" version "1.7.10"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.7.10"
    id "org.jetbrains.kotlin.plugin.spring" version "1.7.10"
    id "org.springframework.boot" version "3.1.5"
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
    id "io.spring.dependency-management" version "1.1.0"
}

ext {
    jetbrainsAnnotationsVersion = "24.0.1"
    postgresContainerVersion = "1.18.0"
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

[compileKotlin, compileTestKotlin]*.kotlinOptions*.jvmTarget = "17"

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-logging"

    implementation "org.postgresql:postgresql"
    implementation "org.liquibase:liquibase-core"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    implementation "org.jetbrains:annotations:$jetbrainsAnnotationsVersion"

    kapt "org.springframework.boot:spring-boot-configuration-processor"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.testcontainers:postgresql:$postgresContainerVersion"
}

gitProperties {
    dateFormat = "dd.MM.yyyy HH:mm:ss (Z)"
    dateFormatTimeZone = "Europe/Moscow"
    extProperty = "gitProps"
}

generateGitProperties.outputs.upToDateWhen { false }

processResources {
    filesMatching(['**/properties-from-gradle.properties']) {
        expand(project.properties)
    }
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
    }
}

bootJar {
    archiveFileName = "${project.name}.jar"
}
